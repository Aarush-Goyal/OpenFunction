apiVersion: v1
kind: Namespace
metadata:
  name: openfunction
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: builders.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Builder
    listKind: BuilderList
    plural: builders
    shortNames:
    - fb
    singular: builder
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Builder is the Schema for the builders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BuilderSpec defines the desired state of Builder
            properties:
              builder:
                description: Cloud Native Buildpacks builders
                type: string
              funcName:
                description: The name of the exported function to be invoked in function
                  code
                type: string
              funcSource:
                description: FuncSource source such as main.py for python
                type: string
              funcType:
                description: Function type such as HTTP or CloudEvent
                type: string
              funcVersion:
                description: Function version in format like v1.0.0
                type: string
              image:
                description: Function image name
                type: string
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              registry:
                description: Image registry of the function image
                properties:
                  account:
                    description: Image registry account including username and password
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                  url:
                    description: Image registry url
                    type: string
                type: object
              source:
                description: Git repository info of a function
                properties:
                  deleteExisting:
                    description: 'Clean out the contents of the repo''s destination
                      directory if it already exists before cloning the repo there
                      (default: true)'
                    type: string
                  depth:
                    description: 'Performs a shallow clone where only the most recent
                      commit(s) will be fetched (default: 1)'
                    type: integer
                  gitInitImage:
                    description: 'The image used where the git-init binary is (default:
                      "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.17.3")'
                    type: string
                  httpProxy:
                    description: 'Git HTTP proxy server for non-SSL requests (default:
                      "")'
                    type: string
                  httpsProxy:
                    description: 'Git HTTPS proxy server for SSL requests (default:
                      "")'
                    type: string
                  noProxy:
                    description: 'Git no proxy - opt out of proxying HTTP/HTTPS requests
                      (default: "")'
                    type: string
                  refspec:
                    description: Git refspec to fetch before checking out revision
                      (default:"")
                    type: string
                  revision:
                    description: Git revision to checkout (branch, tag, sha, refâ€¦)
                      (default:"")
                    type: string
                  sourceSubPath:
                    description: A subpath within the `source` input where the source
                      to build is located.
                    type: string
                  sslVerify:
                    description: 'Defines if http.sslVerify should be set to true
                      or false in the global git config (default: true)'
                    type: boolean
                  subDirectory:
                    description: 'Subdirectory inside the "output" workspace to clone
                      the git repo into (default: "")'
                    type: string
                  submodules:
                    description: 'Defines if the resource should initialize and fetch
                      the submodules (default: true)'
                    type: boolean
                  url:
                    description: Git url to clone
                    type: string
                  verbose:
                    description: 'Log the commands that are executed during git-clone''s
                      operation (default: true)'
                    type: boolean
                required:
                - url
                type: object
            required:
            - builder
            - funcName
            - funcType
            - image
            - registry
            - source
            type: object
          status:
            description: BuilderStatus defines the observed state of Builder
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: functions.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    shortNames:
    - fn
    singular: function
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the functions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              builder:
                description: Cloud Native Buildpacks builders
                type: string
              funcName:
                description: The name of the exported function to be invoked in function
                  code
                type: string
              funcSource:
                description: FuncSource source such as main.py for python
                type: string
              funcType:
                description: Function type such as HTTP or CloudEvent
                type: string
              funcVersion:
                description: Function version in format like v1.0.0
                type: string
              image:
                description: Function image name
                type: string
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              registry:
                description: Image registry of the function image
                properties:
                  account:
                    description: Image registry account including username and password
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                  url:
                    description: Image registry url
                    type: string
                type: object
              runtime:
                description: Function runtime such as Knative or KEDA
                type: string
              source:
                description: Git repository info of a function
                properties:
                  deleteExisting:
                    description: 'Clean out the contents of the repo''s destination
                      directory if it already exists before cloning the repo there
                      (default: true)'
                    type: string
                  depth:
                    description: 'Performs a shallow clone where only the most recent
                      commit(s) will be fetched (default: 1)'
                    type: integer
                  gitInitImage:
                    description: 'The image used where the git-init binary is (default:
                      "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.17.3")'
                    type: string
                  httpProxy:
                    description: 'Git HTTP proxy server for non-SSL requests (default:
                      "")'
                    type: string
                  httpsProxy:
                    description: 'Git HTTPS proxy server for SSL requests (default:
                      "")'
                    type: string
                  noProxy:
                    description: 'Git no proxy - opt out of proxying HTTP/HTTPS requests
                      (default: "")'
                    type: string
                  refspec:
                    description: Git refspec to fetch before checking out revision
                      (default:"")
                    type: string
                  revision:
                    description: Git revision to checkout (branch, tag, sha, refâ€¦)
                      (default:"")
                    type: string
                  sourceSubPath:
                    description: A subpath within the `source` input where the source
                      to build is located.
                    type: string
                  sslVerify:
                    description: 'Defines if http.sslVerify should be set to true
                      or false in the global git config (default: true)'
                    type: boolean
                  subDirectory:
                    description: 'Subdirectory inside the "output" workspace to clone
                      the git repo into (default: "")'
                    type: string
                  submodules:
                    description: 'Defines if the resource should initialize and fetch
                      the submodules (default: true)'
                    type: boolean
                  url:
                    description: Git url to clone
                    type: string
                  verbose:
                    description: 'Log the commands that are executed during git-clone''s
                      operation (default: true)'
                    type: boolean
                required:
                - url
                type: object
            required:
            - builder
            - funcName
            - funcType
            - image
            - registry
            - source
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: servings.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Serving
    listKind: ServingList
    plural: servings
    shortNames:
    - fs
    singular: serving
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Serving is the Schema for the servings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServingSpec defines the desired state of Serving
            properties:
              funcVersion:
                description: Function version in format like v1.0.0
                type: string
              image:
                description: Function image name
                type: string
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              runtime:
                description: The backend runtime to run a function, for example Knative
                type: string
            required:
            - image
            type: object
          status:
            description: ServingStatus defines the observed state of Serving
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: openfunction-leader-election-role
  namespace: openfunction
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openfunction-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - builders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - builders/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.openfunction.io
  resources:
  - functions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - functions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.openfunction.io
  resources:
  - servings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - servings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineresources
  - pipelineruns
  - pipelines
  - tasks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openfunction-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: openfunction-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: openfunction-leader-election-rolebinding
  namespace: openfunction
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: openfunction-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openfunction-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openfunction-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openfunction-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openfunction-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: openfunction-controller-manager-metrics-service
  namespace: openfunction
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: openfunction-controller-manager
  namespace: openfunction
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: openfunction/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /openfunction
        image: openfunction/openfunction:latest
        name: openfunction
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
