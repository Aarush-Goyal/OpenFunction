apiVersion: v1
kind: Namespace
metadata:
  name: openfunction
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: builders.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Builder
    listKind: BuilderList
    plural: builders
    shortNames:
    - fb
    singular: builder
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Builder is the Schema for the builders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BuilderSpec defines the desired state of Builder
            properties:
              builder:
                description: Cloud Native Buildpacks builders
                type: string
              image:
                description: Function image name
                type: string
              params:
                additionalProperties:
                  type: string
                description: Environment variables to pass to the build process
                type: object
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              registry:
                description: Image registry of the function image
                properties:
                  account:
                    description: Image registry account including username and password
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                  url:
                    description: Image registry url
                    type: string
                type: object
              srcRepo:
                description: Git repository info of a function
                properties:
                  deleteExisting:
                    description: 'Clean out the contents of the repo''s destination
                      directory if it already exists before cloning the repo there
                      (default: true)'
                    type: string
                  depth:
                    description: 'Performs a shallow clone where only the most recent
                      commit(s) will be fetched (default: 1)'
                    type: integer
                  gitInitImage:
                    description: 'The image used where the git-init binary is (default:
                      "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.17.3")'
                    type: string
                  httpProxy:
                    description: 'Git HTTP proxy server for non-SSL requests (default:
                      "")'
                    type: string
                  httpsProxy:
                    description: 'Git HTTPS proxy server for SSL requests (default:
                      "")'
                    type: string
                  noProxy:
                    description: 'Git no proxy - opt out of proxying HTTP/HTTPS requests
                      (default: "")'
                    type: string
                  refspec:
                    description: Git refspec to fetch before checking out revision
                      (default:"")
                    type: string
                  revision:
                    description: Git revision to checkout (branch, tag, sha, refâ€¦)
                      (default:"")
                    type: string
                  sourceSubPath:
                    description: A subpath within the `source` input where the source
                      to build is located.
                    type: string
                  sslVerify:
                    description: 'Defines if http.sslVerify should be set to true
                      or false in the global git config (default: true)'
                    type: boolean
                  subDirectory:
                    description: 'Subdirectory inside the "output" workspace to clone
                      the git repo into (default: "")'
                    type: string
                  submodules:
                    description: 'Defines if the resource should initialize and fetch
                      the submodules (default: true)'
                    type: boolean
                  url:
                    description: Git url to clone
                    type: string
                  verbose:
                    description: 'Log the commands that are executed during git-clone''s
                      operation (default: true)'
                    type: boolean
                required:
                - url
                type: object
              version:
                description: Function version in format like v1.0.0
                type: string
            required:
            - builder
            - image
            - registry
            - srcRepo
            type: object
          status:
            description: BuilderStatus defines the observed state of Builder
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: functions.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    shortNames:
    - fn
    singular: function
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the functions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              build:
                description: Information needed to build a function
                properties:
                  builder:
                    description: Cloud Native Buildpacks builders
                    type: string
                  params:
                    additionalProperties:
                      type: string
                    description: Environment params to pass to the builder
                    type: object
                  registry:
                    description: Image registry of the function image
                    properties:
                      account:
                        description: Image registry account including username and
                          password
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      url:
                        description: Image registry url
                        type: string
                    type: object
                  srcRepo:
                    description: Function Source code repository
                    properties:
                      deleteExisting:
                        description: 'Clean out the contents of the repo''s destination
                          directory if it already exists before cloning the repo there
                          (default: true)'
                        type: string
                      depth:
                        description: 'Performs a shallow clone where only the most
                          recent commit(s) will be fetched (default: 1)'
                        type: integer
                      gitInitImage:
                        description: 'The image used where the git-init binary is
                          (default: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.17.3")'
                        type: string
                      httpProxy:
                        description: 'Git HTTP proxy server for non-SSL requests (default:
                          "")'
                        type: string
                      httpsProxy:
                        description: 'Git HTTPS proxy server for SSL requests (default:
                          "")'
                        type: string
                      noProxy:
                        description: 'Git no proxy - opt out of proxying HTTP/HTTPS
                          requests (default: "")'
                        type: string
                      refspec:
                        description: Git refspec to fetch before checking out revision
                          (default:"")
                        type: string
                      revision:
                        description: Git revision to checkout (branch, tag, sha, refâ€¦)
                          (default:"")
                        type: string
                      sourceSubPath:
                        description: A subpath within the `source` input where the
                          source to build is located.
                        type: string
                      sslVerify:
                        description: 'Defines if http.sslVerify should be set to true
                          or false in the global git config (default: true)'
                        type: boolean
                      subDirectory:
                        description: 'Subdirectory inside the "output" workspace to
                          clone the git repo into (default: "")'
                        type: string
                      submodules:
                        description: 'Defines if the resource should initialize and
                          fetch the submodules (default: true)'
                        type: boolean
                      url:
                        description: Git url to clone
                        type: string
                      verbose:
                        description: 'Log the commands that are executed during git-clone''s
                          operation (default: true)'
                        type: boolean
                    required:
                    - url
                    type: object
                required:
                - builder
                - registry
                - srcRepo
                type: object
              image:
                description: Function image name
                type: string
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              serving:
                description: Information needed to run a function
                properties:
                  dapr:
                    description: Parameters of dapr, must not be nil when runtime
                      is Dapr.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations for dapr
                        type: object
                      components:
                        description: Components of dapr
                        items:
                          properties:
                            ignoreErrors:
                              type: boolean
                            initTimeout:
                              type: string
                            metadata:
                              items:
                                description: MetadataItem is a name/value pair for
                                  a metadata
                                properties:
                                  name:
                                    type: string
                                  secretKeyRef:
                                    description: SecretKeyRef is a reference to a
                                      secret holding the value for the metadata item.
                                      Name is the secret name, and key is the field
                                      in the secret.
                                    properties:
                                      key:
                                        type: string
                                      name:
                                        type: string
                                    required:
                                    - key
                                    - name
                                    type: object
                                  value:
                                    description: DynamicValue is a dynamic value struct
                                      for the component.metadata pair value
                                    type: ""
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                - name
                                type: object
                              type: array
                            name:
                              type: string
                            type:
                              type: string
                            version:
                              type: string
                          required:
                          - metadata
                          - name
                          - type
                          - version
                          type: object
                        type: array
                      input:
                        description: Function input from bindings data
                        properties:
                          name:
                            description: Input name, the name of Dapr component. The
                              component must be created in k8s cluster, or defined
                              in the `components` or `subscriptions`.
                            type: string
                          pattern:
                            description: Input serving listening path. if the type
                              is bindings, pattern is the name of component. if the
                              type is pubsub, pattern is the topic of subscription.
                              If the type is invoke, pattern is the name of function.
                            type: string
                          type:
                            description: 'Input type, known values are bindings, pubsub,
                              invoke. bindings: Indicates that the input is the Dapr
                              bindings component. pubsub: Indicates that the input
                              is the Dapr pubsub component. invoke: Indicates that
                              the input is the Dapr service invocation component.'
                            type: string
                        required:
                        - name
                        - pattern
                        - type
                        type: object
                      output:
                        description: Function output to bindings data
                        items:
                          properties:
                            name:
                              description: Output name, the name of Dapr component.
                                The component must be created in k8s cluster, or defined
                                in the `components` or `subscriptions`.
                              type: string
                            params:
                              additionalProperties:
                                type: string
                              description: Parameters for output.
                              type: object
                            pattern:
                              description: Output serving listening path. if the type
                                is bindings, pattern is the name of component. if
                                the type is pubsub, pattern is the topic of subscription.
                                If the type is invoke, pattern is the name of function.
                              type: string
                            type:
                              description: 'Output type, known values are bindings,
                                pubsub, invoke. bindings: Indicates that the input
                                is the Dapr bindings component. pubsub: Indicates
                                that the input is the Dapr pubsub component. invoke:
                                Indicates that the input is the Dapr service invocation
                                component.'
                              type: string
                          required:
                          - name
                          - pattern
                          - type
                          type: object
                        type: array
                      protocol:
                        description: Function serving kind, known values are HTTP,
                          gRPC default value is http.
                        type: string
                      scaledJob:
                        properties:
                          failedJobsHistoryLimit:
                            format: int32
                            type: integer
                          maxReplicaCount:
                            format: int32
                            type: integer
                          pollingInterval:
                            format: int32
                            type: integer
                          scalingStrategy:
                            description: ScalingStrategy defines the strategy of Scaling
                            properties:
                              customScalingQueueLengthDeduction:
                                format: int32
                                type: integer
                              customScalingRunningJobPercentage:
                                type: string
                              strategy:
                                type: string
                            type: object
                          successfulJobsHistoryLimit:
                            format: int32
                            type: integer
                          triggers:
                            items:
                              description: ScaleTriggers reference the scaler that
                                will be used
                              properties:
                                authenticationRef:
                                  description: ScaledObjectAuthRef points to the TriggerAuthentication
                                    or ClusterTriggerAuthentication object that is
                                    used to authenticate the scaler with the environment
                                  properties:
                                    kind:
                                      description: Kind of the resource being referred
                                        to. Defaults to TriggerAuthentication.
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                metadata:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                type:
                                  type: string
                              required:
                              - metadata
                              - type
                              type: object
                            type: array
                        required:
                        - triggers
                        type: object
                      scaledObject:
                        description: One of scaledObject and scaledJob can not be
                          nil.
                        properties:
                          advanced:
                            description: AdvancedConfig specifies advance scaling
                              options
                            properties:
                              horizontalPodAutoscalerConfig:
                                description: HorizontalPodAutoscalerConfig specifies
                                  horizontal scale config
                                properties:
                                  behavior:
                                    description: HorizontalPodAutoscalerBehavior configures
                                      the scaling behavior of the target in both Up
                                      and Down directions (scaleUp and scaleDown fields
                                      respectively).
                                    properties:
                                      scaleDown:
                                        description: scaleDown is scaling policy for
                                          scaling Down. If not set, the default value
                                          is to allow to scale down to minReplicas
                                          pods, with a 300 second stabilization window
                                          (i.e., the highest recommendation for the
                                          last 300sec is used).
                                        properties:
                                          policies:
                                            description: policies is a list of potential
                                              scaling polices which can be used during
                                              scaling. At least one policy must be
                                              specified, otherwise the HPAScalingRules
                                              will be discarded as invalid
                                            items:
                                              description: HPAScalingPolicy is a single
                                                policy which must hold true for a
                                                specified past interval.
                                              properties:
                                                periodSeconds:
                                                  description: PeriodSeconds specifies
                                                    the window of time for which the
                                                    policy should hold true. PeriodSeconds
                                                    must be greater than zero and
                                                    less than or equal to 1800 (30
                                                    min).
                                                  format: int32
                                                  type: integer
                                                type:
                                                  description: Type is used to specify
                                                    the scaling policy.
                                                  type: string
                                                value:
                                                  description: Value contains the
                                                    amount of change which is permitted
                                                    by the policy. It must be greater
                                                    than zero
                                                  format: int32
                                                  type: integer
                                              required:
                                              - periodSeconds
                                              - type
                                              - value
                                              type: object
                                            type: array
                                          selectPolicy:
                                            description: selectPolicy is used to specify
                                              which policy should be used. If not
                                              set, the default value MaxPolicySelect
                                              is used.
                                            type: string
                                          stabilizationWindowSeconds:
                                            description: 'StabilizationWindowSeconds
                                              is the number of seconds for which past
                                              recommendations should be considered
                                              while scaling up or scaling down. StabilizationWindowSeconds
                                              must be greater than or equal to zero
                                              and less than or equal to 3600 (one
                                              hour). If not set, use the default values:
                                              - For scale up: 0 (i.e. no stabilization
                                              is done). - For scale down: 300 (i.e.
                                              the stabilization window is 300 seconds
                                              long).'
                                            format: int32
                                            type: integer
                                        type: object
                                      scaleUp:
                                        description: 'scaleUp is scaling policy for
                                          scaling Up. If not set, the default value
                                          is the higher of:   * increase no more than
                                          4 pods per 60 seconds   * double the number
                                          of pods per 60 seconds No stabilization
                                          is used.'
                                        properties:
                                          policies:
                                            description: policies is a list of potential
                                              scaling polices which can be used during
                                              scaling. At least one policy must be
                                              specified, otherwise the HPAScalingRules
                                              will be discarded as invalid
                                            items:
                                              description: HPAScalingPolicy is a single
                                                policy which must hold true for a
                                                specified past interval.
                                              properties:
                                                periodSeconds:
                                                  description: PeriodSeconds specifies
                                                    the window of time for which the
                                                    policy should hold true. PeriodSeconds
                                                    must be greater than zero and
                                                    less than or equal to 1800 (30
                                                    min).
                                                  format: int32
                                                  type: integer
                                                type:
                                                  description: Type is used to specify
                                                    the scaling policy.
                                                  type: string
                                                value:
                                                  description: Value contains the
                                                    amount of change which is permitted
                                                    by the policy. It must be greater
                                                    than zero
                                                  format: int32
                                                  type: integer
                                              required:
                                              - periodSeconds
                                              - type
                                              - value
                                              type: object
                                            type: array
                                          selectPolicy:
                                            description: selectPolicy is used to specify
                                              which policy should be used. If not
                                              set, the default value MaxPolicySelect
                                              is used.
                                            type: string
                                          stabilizationWindowSeconds:
                                            description: 'StabilizationWindowSeconds
                                              is the number of seconds for which past
                                              recommendations should be considered
                                              while scaling up or scaling down. StabilizationWindowSeconds
                                              must be greater than or equal to zero
                                              and less than or equal to 3600 (one
                                              hour). If not set, use the default values:
                                              - For scale up: 0 (i.e. no stabilization
                                              is done). - For scale down: 300 (i.e.
                                              the stabilization window is 300 seconds
                                              long).'
                                            format: int32
                                            type: integer
                                        type: object
                                    type: object
                                type: object
                              restoreToOriginalReplicaCount:
                                type: boolean
                            type: object
                          cooldownPeriod:
                            format: int32
                            type: integer
                          maxReplicaCount:
                            format: int32
                            type: integer
                          minReplicaCount:
                            format: int32
                            type: integer
                          pollingInterval:
                            format: int32
                            type: integer
                          triggers:
                            items:
                              description: ScaleTriggers reference the scaler that
                                will be used
                              properties:
                                authenticationRef:
                                  description: ScaledObjectAuthRef points to the TriggerAuthentication
                                    or ClusterTriggerAuthentication object that is
                                    used to authenticate the scaler with the environment
                                  properties:
                                    kind:
                                      description: Kind of the resource being referred
                                        to. Defaults to TriggerAuthentication.
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                metadata:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                type:
                                  type: string
                              required:
                              - metadata
                              - type
                              type: object
                            type: array
                          workloadType:
                            description: How to run the function, known values are
                              Deployment or StatefulSet, default is Deployment.
                            type: string
                        required:
                        - triggers
                        type: object
                      subscriptions:
                        description: Subscriptions of dapr
                        items:
                          properties:
                            name:
                              type: string
                            pubsubname:
                              type: string
                            route:
                              type: string
                            scopes:
                              items:
                                type: string
                              type: array
                            topic:
                              type: string
                          required:
                          - name
                          - pubsubname
                          - route
                          - topic
                          type: object
                        type: array
                    type: object
                  params:
                    additionalProperties:
                      type: string
                    description: Parameters to pass to the serving. All parameters
                      will be injected into the pod as environment variables. Function
                      code can use these parameters by getting environment variables
                    type: object
                  runtime:
                    description: Function runtime such as Knative or Dapr
                    type: string
                type: object
              version:
                description: Function version in format like v1.0.0
                type: string
            required:
            - build
            - image
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  name: servings.core.openfunction.io
spec:
  group: core.openfunction.io
  names:
    kind: Serving
    listKind: ServingList
    plural: servings
    shortNames:
    - fs
    singular: serving
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Serving is the Schema for the servings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServingSpec defines the desired state of Serving
            properties:
              dapr:
                description: Parameters of dapr.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations for dapr
                    type: object
                  components:
                    description: Components of dapr
                    items:
                      properties:
                        ignoreErrors:
                          type: boolean
                        initTimeout:
                          type: string
                        metadata:
                          items:
                            description: MetadataItem is a name/value pair for a metadata
                            properties:
                              name:
                                type: string
                              secretKeyRef:
                                description: SecretKeyRef is a reference to a secret
                                  holding the value for the metadata item. Name is
                                  the secret name, and key is the field in the secret.
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                              value:
                                description: DynamicValue is a dynamic value struct
                                  for the component.metadata pair value
                                type: ""
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                            - name
                            type: object
                          type: array
                        name:
                          type: string
                        type:
                          type: string
                        version:
                          type: string
                      required:
                      - metadata
                      - name
                      - type
                      - version
                      type: object
                    type: array
                  input:
                    description: Function input from bindings data
                    properties:
                      name:
                        description: Input name, the name of Dapr component. The component
                          must be created in k8s cluster, or defined in the `components`
                          or `subscriptions`.
                        type: string
                      pattern:
                        description: Input serving listening path. if the type is
                          bindings, pattern is the name of component. if the type
                          is pubsub, pattern is the topic of subscription. If the
                          type is invoke, pattern is the name of function.
                        type: string
                      type:
                        description: 'Input type, known values are bindings, pubsub,
                          invoke. bindings: Indicates that the input is the Dapr bindings
                          component. pubsub: Indicates that the input is the Dapr
                          pubsub component. invoke: Indicates that the input is the
                          Dapr service invocation component.'
                        type: string
                    required:
                    - name
                    - pattern
                    - type
                    type: object
                  output:
                    description: Function output to bindings data
                    items:
                      properties:
                        name:
                          description: Output name, the name of Dapr component. The
                            component must be created in k8s cluster, or defined in
                            the `components` or `subscriptions`.
                          type: string
                        params:
                          additionalProperties:
                            type: string
                          description: Parameters for output.
                          type: object
                        pattern:
                          description: Output serving listening path. if the type
                            is bindings, pattern is the name of component. if the
                            type is pubsub, pattern is the topic of subscription.
                            If the type is invoke, pattern is the name of function.
                          type: string
                        type:
                          description: 'Output type, known values are bindings, pubsub,
                            invoke. bindings: Indicates that the input is the Dapr
                            bindings component. pubsub: Indicates that the input is
                            the Dapr pubsub component. invoke: Indicates that the
                            input is the Dapr service invocation component.'
                          type: string
                      required:
                      - name
                      - pattern
                      - type
                      type: object
                    type: array
                  protocol:
                    description: Function serving kind, known values are HTTP, gRPC
                      default value is http.
                    type: string
                  scaledJob:
                    properties:
                      failedJobsHistoryLimit:
                        format: int32
                        type: integer
                      maxReplicaCount:
                        format: int32
                        type: integer
                      pollingInterval:
                        format: int32
                        type: integer
                      scalingStrategy:
                        description: ScalingStrategy defines the strategy of Scaling
                        properties:
                          customScalingQueueLengthDeduction:
                            format: int32
                            type: integer
                          customScalingRunningJobPercentage:
                            type: string
                          strategy:
                            type: string
                        type: object
                      successfulJobsHistoryLimit:
                        format: int32
                        type: integer
                      triggers:
                        items:
                          description: ScaleTriggers reference the scaler that will
                            be used
                          properties:
                            authenticationRef:
                              description: ScaledObjectAuthRef points to the TriggerAuthentication
                                or ClusterTriggerAuthentication object that is used
                                to authenticate the scaler with the environment
                              properties:
                                kind:
                                  description: Kind of the resource being referred
                                    to. Defaults to TriggerAuthentication.
                                  type: string
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            metadata:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - metadata
                          - type
                          type: object
                        type: array
                    required:
                    - triggers
                    type: object
                  scaledObject:
                    description: One of scaledObject and scaledJob can not be nil.
                    properties:
                      advanced:
                        description: AdvancedConfig specifies advance scaling options
                        properties:
                          horizontalPodAutoscalerConfig:
                            description: HorizontalPodAutoscalerConfig specifies horizontal
                              scale config
                            properties:
                              behavior:
                                description: HorizontalPodAutoscalerBehavior configures
                                  the scaling behavior of the target in both Up and
                                  Down directions (scaleUp and scaleDown fields respectively).
                                properties:
                                  scaleDown:
                                    description: scaleDown is scaling policy for scaling
                                      Down. If not set, the default value is to allow
                                      to scale down to minReplicas pods, with a 300
                                      second stabilization window (i.e., the highest
                                      recommendation for the last 300sec is used).
                                    properties:
                                      policies:
                                        description: policies is a list of potential
                                          scaling polices which can be used during
                                          scaling. At least one policy must be specified,
                                          otherwise the HPAScalingRules will be discarded
                                          as invalid
                                        items:
                                          description: HPAScalingPolicy is a single
                                            policy which must hold true for a specified
                                            past interval.
                                          properties:
                                            periodSeconds:
                                              description: PeriodSeconds specifies
                                                the window of time for which the policy
                                                should hold true. PeriodSeconds must
                                                be greater than zero and less than
                                                or equal to 1800 (30 min).
                                              format: int32
                                              type: integer
                                            type:
                                              description: Type is used to specify
                                                the scaling policy.
                                              type: string
                                            value:
                                              description: Value contains the amount
                                                of change which is permitted by the
                                                policy. It must be greater than zero
                                              format: int32
                                              type: integer
                                          required:
                                          - periodSeconds
                                          - type
                                          - value
                                          type: object
                                        type: array
                                      selectPolicy:
                                        description: selectPolicy is used to specify
                                          which policy should be used. If not set,
                                          the default value MaxPolicySelect is used.
                                        type: string
                                      stabilizationWindowSeconds:
                                        description: 'StabilizationWindowSeconds is
                                          the number of seconds for which past recommendations
                                          should be considered while scaling up or
                                          scaling down. StabilizationWindowSeconds
                                          must be greater than or equal to zero and
                                          less than or equal to 3600 (one hour). If
                                          not set, use the default values: - For scale
                                          up: 0 (i.e. no stabilization is done). -
                                          For scale down: 300 (i.e. the stabilization
                                          window is 300 seconds long).'
                                        format: int32
                                        type: integer
                                    type: object
                                  scaleUp:
                                    description: 'scaleUp is scaling policy for scaling
                                      Up. If not set, the default value is the higher
                                      of:   * increase no more than 4 pods per 60
                                      seconds   * double the number of pods per 60
                                      seconds No stabilization is used.'
                                    properties:
                                      policies:
                                        description: policies is a list of potential
                                          scaling polices which can be used during
                                          scaling. At least one policy must be specified,
                                          otherwise the HPAScalingRules will be discarded
                                          as invalid
                                        items:
                                          description: HPAScalingPolicy is a single
                                            policy which must hold true for a specified
                                            past interval.
                                          properties:
                                            periodSeconds:
                                              description: PeriodSeconds specifies
                                                the window of time for which the policy
                                                should hold true. PeriodSeconds must
                                                be greater than zero and less than
                                                or equal to 1800 (30 min).
                                              format: int32
                                              type: integer
                                            type:
                                              description: Type is used to specify
                                                the scaling policy.
                                              type: string
                                            value:
                                              description: Value contains the amount
                                                of change which is permitted by the
                                                policy. It must be greater than zero
                                              format: int32
                                              type: integer
                                          required:
                                          - periodSeconds
                                          - type
                                          - value
                                          type: object
                                        type: array
                                      selectPolicy:
                                        description: selectPolicy is used to specify
                                          which policy should be used. If not set,
                                          the default value MaxPolicySelect is used.
                                        type: string
                                      stabilizationWindowSeconds:
                                        description: 'StabilizationWindowSeconds is
                                          the number of seconds for which past recommendations
                                          should be considered while scaling up or
                                          scaling down. StabilizationWindowSeconds
                                          must be greater than or equal to zero and
                                          less than or equal to 3600 (one hour). If
                                          not set, use the default values: - For scale
                                          up: 0 (i.e. no stabilization is done). -
                                          For scale down: 300 (i.e. the stabilization
                                          window is 300 seconds long).'
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                            type: object
                          restoreToOriginalReplicaCount:
                            type: boolean
                        type: object
                      cooldownPeriod:
                        format: int32
                        type: integer
                      maxReplicaCount:
                        format: int32
                        type: integer
                      minReplicaCount:
                        format: int32
                        type: integer
                      pollingInterval:
                        format: int32
                        type: integer
                      triggers:
                        items:
                          description: ScaleTriggers reference the scaler that will
                            be used
                          properties:
                            authenticationRef:
                              description: ScaledObjectAuthRef points to the TriggerAuthentication
                                or ClusterTriggerAuthentication object that is used
                                to authenticate the scaler with the environment
                              properties:
                                kind:
                                  description: Kind of the resource being referred
                                    to. Defaults to TriggerAuthentication.
                                  type: string
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            metadata:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - metadata
                          - type
                          type: object
                        type: array
                      workloadType:
                        description: How to run the function, known values are Deployment
                          or StatefulSet, default is Deployment.
                        type: string
                    required:
                    - triggers
                    type: object
                  subscriptions:
                    description: Subscriptions of dapr
                    items:
                      properties:
                        name:
                          type: string
                        pubsubname:
                          type: string
                        route:
                          type: string
                        scopes:
                          items:
                            type: string
                          type: array
                        topic:
                          type: string
                      required:
                      - name
                      - pubsubname
                      - route
                      - topic
                      type: object
                    type: array
                type: object
              image:
                description: Function image name
                type: string
              params:
                additionalProperties:
                  type: string
                description: Parameters to pass to the serving. All parameters will
                  be injected into the pod as environment variables. Function code
                  can use these parameters by getting environment variables
                type: object
              port:
                description: The port on which the function will be invoked
                format: int32
                type: integer
              runtime:
                description: The backend runtime to run a function, for example Knative
                type: string
              version:
                description: Function version in format like v1.0.0
                type: string
            required:
            - image
            type: object
          status:
            description: ServingStatus defines the observed state of Serving
            properties:
              phase:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: openfunction-leader-election-role
  namespace: openfunction
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openfunction-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - builders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - builders/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.openfunction.io
  resources:
  - functions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - functions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.openfunction.io
  resources:
  - servings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfunction.io
  resources:
  - servings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineresources
  - pipelineruns
  - pipelines
  - tasks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openfunction-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: openfunction-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: openfunction-leader-election-rolebinding
  namespace: openfunction
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: openfunction-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openfunction-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openfunction-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openfunction-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openfunction-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openfunction
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: openfunction-controller-manager-metrics-service
  namespace: openfunction
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: openfunction-controller-manager
  namespace: openfunction
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: openfunction/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /openfunction
        image: openfunction/openfunction:latest
        name: openfunction
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
